Mapper Test Code 예시

import org.junit.jupiter.api.*;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import java.util.List;

import static org.assertj.core.api.Assertions.*;

@ExtendWith(SpringExtension.class) //Junit4의 Runwith과 같은 기능을 하는 Junit5 어노테이션
@SpringBootTest(classes = PmcwebApplication.class) // Junit5 기준 Application Context사용할 때 사용
@TestMethodOrder(MethodOrderer.OrderAnnotation.class) // Order를 붙일 때 사용
@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE) // 진짜 데이터베이스에 테스트
public class UserMapperTest {
    @Autowired
    private AccountMapper userMapper;
    private static final String testEmail = "test@naver.com";
    private static final String testName = "test";

    @Test
    @Order(1)
    void createUser() {
        Account account = Account.builder().name(testName).email(testEmail).password("1234").status(UserStatus.REGISTERED.getTitle()).role(UserRole.NORMAL.getTitle()).instTime(new Date(System.currentTimeMillis())).build();
        userMapper.createUser(account);
        Account createdUser = userMapper.getUserByEmail(testEmail);
        assertThat(createdUser.getEmail().equals(account.getEmail()));
    }

    @Test
    @Order(2)
    void getUserByEmail() {
        Account getUser = userMapper.getUserByEmail(testEmail);
        assertThat(testName.equals(getUser.getName()));
    }

    @Test
    @Order(3)
    void getUserList() {
        List<Account> userList = userMapper.getUserList();
        assertThat(userList.size() > 0);
    }

    @Test
    @Order(4)
    void deleteUser() {
        Account getUser = userMapper.getUserByEmail(testEmail);
        assertThat(getUser != null);
        userMapper.deleteUser(getUser.getId());
        assertThat(userMapper.getUserById(getUser.getId()) == null);
    }
}

Service Test Code 예시

import org.junit.jupiter.api.*;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import java.util.List;

import static org.assertj.core.api.Assertions.*;

@ExtendWith(SpringExtension.class)
@SpringBootTest(classes = PmcwebApplication.class)
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
public class UserServiceTest {
    @Autowired
    private AccountServiceImpl userServiceImpl;
    private static final String testEmail = "test@naver.com";
    private static final String testName = "test";

    @Test
    @Order(1)
    void createUser() {
        Account account = Account.builder().name(testName).email(testEmail).password("1234").status(UserStatus.REGISTERED.getTitle()).role(UserRole.NORMAL.getTitle()).instTime(new Date(System.currentTimeMillis())).build();
        userServiceImpl.createUser(account);
        Account findUser = userServiceImpl.getUserByEmail(account.getEmail());
        assertThat(account.getEmail()).isEqualTo(findUser.getEmail());
    }

    @Test
    @Order(2)
    void getUser() {
        Account getUser = userServiceImpl.getUserByEmail(testEmail);
        assertThat(testEmail.equals(getUser.getEmail()));
        assertThat(testName.equals(getUser.getName()));
    }

    @Test
    @Order(3)
    void getUsers() {
        List<Account> userList = userServiceImpl.getUsers();
        assertThat(userList.size() > 0);
    }

    @Test
    @Order(4)
    void deleteUser() {
        Account getUser = userServiceImpl.getUserByEmail(testEmail);
        assertThat(userServiceImpl.getUserByEmail(testEmail) != null);
        userServiceImpl.deleteUser(getUser.getId());
        assertThat(userServiceImpl.getUserByEmail(testEmail) == null);
    }
}

package client;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.*;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@ExtendWith(SpringExtension.class)
@WebMvcTest(AccountController.class)
class AccountControllerTest {
    @Autowired
    private MockMvc mockMvc;
    @MockBean
    private AccountService accountService;
    @MockBean
    private AccountSecurityService accountSecurityService;

    @Test
    public void getSignup() throws Exception {
        this.mockMvc.perform(get("/user/signup")).andDo(print()).andExpect(result -> "user/register".equals(result)).andExpect(status().isOk());
    }
}